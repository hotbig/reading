CH02 进程管理和调度
-----------------------------------------------------------------------------------------------
.8.1 SMP调度
- CPU负荷在所有处理器上面尽可能均衡，
- 亲和性，比如计算密集型绑定到前3个CPU,交互密集型绑定到最后一个CPU
- 尽可能的避免迁移进程到其他CPU，因为缓存的代价昂贵

周期性调度器schedule_tick每次都会调用trigger_load_balance，其会检查每个CPU的就绪队列负载，
然后根据每个就绪队列的负载情况，选择将高负载CPU就绪队列里面的进程迁移到低负载的CPU。每个
就绪队列（就是对应每个CPU）都有一个专门的迁移线程负责迁移。

在用exec系统调用启动一个新进程时，是调度器跨越CPU移动该进程的一个良好时机。（高速缓存）

每个Processor都有一个IDLE进程，运行队列以及scheduler。

.8.2 调度器实现组调度：优先保证进程组之前的公平，其次在每个组内保证公平

.8.3 内核抢占和低延迟
- 内核抢占和用户层的进程抢占是两个不同的概念
内核抢占1：
- preempt_disable/preempt_enable/
- 在preempt_enable之后调用preempt_check_resched检查是否有其他进程打算抢占
内核抢占2：
- 硬件中断请求之后，preempt_schedule_irq
内核抢占3：
- 调用cond_resched


CH15 时间管理
-----------------------------------------------------------------------------------------------
.HPET: 
- at least 10Mhz frequency. 1GHZ = 1ns cycle, 10MHZ= 100ns cycles, 最高的精度就是100ns
- provide 3~256 comparators to generate interrupts for when the least significant bits 
  are equal to the corresponding bits of the 64-bit main counter value. Comparators can
  be driven by the operating system, e.g. to provide one timer per CPU for scheduling, 
  or by applications.
- lenovo-R400 上面的HPET是14.318180mhz (dmesg|grep -i HPET)
  http://blog.csdn.net/sahusoft/article/details/7867069
- clocksource, /sys/devices/system/clocksource/clocksource0/available_clocksources
.LAPIC
- IA上，kernel 2.6.18之后启用代替PIT, 精度是1000ns,就是1微秒
.PIT
- IA上，100hz, 1000hz, ----> 10ms, 1ms resolution timer

